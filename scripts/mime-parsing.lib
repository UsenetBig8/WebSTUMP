#!/usr/bin/env perl
#
# Copyright 1999 Igor Chudov
#
# This file is part of WebSTUMP.
# 
# WebSTUMP is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# WebSTUMP is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with WebSTUMP.  If not, see <https://www.gnu.org/licenses/>.
#
# this is a library of perl routines for MIME parsing.
#

sub decode_plaintext_message {
  my $dir = pop( @_ );

  $Article_Head = "";

  while( <STDIN> ) {
    $Article_Head .= $_;
    chomp;
    if( /^From: / ) {
      $Article_From = $_;
      $Article_From =~ s/^From: //;
    } elsif( /^Subject: / ) {
      $Article_Subject = $_;
      $Article_Subject =~ s/^Subject: //;
    }

    last if /^$/;
  }

  $Article_Body = "";

  $Article_Body .= $_ while( <STDIN> );

  return &file_plaintext_message( $dir );

}

# stores a plaintext message in a fashion similar to a MIME message
sub file_plaintext_message {
  my $dir = pop( @_ );

  mkdir $dir, 0775;
  chmod 0755, $dir;

  open( FULL, ">$dir/full_message.txt" );
  print FULL $Article_Body;
  close( FULL );


  my $prolog = "From: " . $Article_From . "\nReal-Subject: $Article_Subject";
#	       . "Subject: " . $entity->head->get( "Subject" );

  $prolog .= "\n\n";
 
  open( SKELETON, ">$dir/skeleton.skeleton" );
  close( SKELETON );

  open( HEAD, ">$dir/headers.txt" );
  print HEAD $Article_Head . "\n";
  close( HEAD );

  open( TEXT_FILES, ">$dir/text.files.lst" );

  print TEXT_FILES "full_message.txt text/plain inline\n";

  my $body = $Article_Body;
  $body =~ /(.*\n){0,3}/s;

  $prolog .= $1;

  close( TEXT_FILES );

  return $prolog;
}
1;
